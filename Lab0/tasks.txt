------
Well, I googled 'how to change commit message after commit' and clicked on the GitHub help page. After that, I used the command git rebase -i Head ~1 which allowed me to change Task 8 to Task 6
For Task 7, the commit hash is c7e86ad4f1061b0cad9f64a6c9ad26f386bc1168. I was going commit message after commit message and that was a lot, so I googled how to search for terms in git logs. I found on gun.io that grep helps to find the message I need. The command I used was git log --grep mouse and then looked for the one with the specific --no-mouse message.
For task8, i searched on google 'how to view edits on files before commit github' and it brought me to stackoverflow.com where i found the diff command that tells the difference in the file from now until the last commit, i believe. The command i used was  diff readme.txt and it showed me what I put in there.
For Task 9, I used  mistake.txt to remove the file, then went to git status to see what it owuld say. It said to use  rm mistake.txt to commit that action, so I did that, then I committed that file deletion.
For Task 10, instead of searching for how to undo commits in github, i simply searched how to remove commits in github. From there, I uesd the command $ git reset --hard HEAD~2 to remove the last 2 commits. I am confident that I did this correctly because when I did $ git status, it gave me that my branch was behind by 3 commits rather than simply one.
